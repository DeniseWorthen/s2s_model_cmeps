# DEFAULTS VALUES OVERRIDDEN BY PLATFORMS

platform.defaults={
    BUILD_WALLTIME=3600 # Wallclock limit in seconds for build jobs
    DEFAULT_TEST_WALLTIME=1800 # Default wallclock limit in seconds for test jobs

    SRCnems="@[HOMEnems]/NEMS/src"
    PARMnems="@[HOMEnems]/parm"

    SRCrt="@[HOMErt]/src"
    EXECrt="@[HOMErt]/exec"
    INCrt="@[HOMErt]/include"

    # The TMPrt is the scrub area for running regression tests.
    TMPrt="@[RT_SCRATCH_DIR]/tmp"

    # The COMrt is the output area for files to be verified.
    COMrt="@[HOMErt]/com"

    # The BASELINE directory contains the "last known good" baseline
    # to compare to COMrt in verification mode.  In baseline mode,
    # files are installed to the BASELINE directory, and this variable
    # is overridden with some temporary directory.
    BASELINE="@[INPUTS]" # Baseline input or output directory
}

# WCOSS and jet support was getting too long, so they have their own files:

load 'wcoss.input'
load 'jet.input'
load 'gaea.input'

########################################################################

# THEIA SUPPORT

platform theia {
    use platform.defaults
    MACHINE_ID='theia' # Name of this platform.
    PARTITION='theia'

    MPI='srun'

    CPU_ACCOUNT='nems'
    BUILD_QUEUE='&BUILDQ;' # Queue to use for compilation jobs
    SHORT_TEST_QUEUE='&SHORTQ;' # Queue to use for short test jobs
    LONG_TEST_QUEUE='&LONGQ;' # Queue to use for long test jobs

    cores_per_node=24 # Number of cores per node on compute nodes
    cpus_per_core=2

    # The *nems locations are in NEMS checkout areas.
    HOMEnems=PWD_UP5

    # The *rt locations are auto-generated areas.
    HOMErt=OUTPUT_PATH

    # INPUTS is the input directory, which should contain fix and parm
    # files, plus any restarts or other inputs.
    BASELINE="/scratch4/NCEPDEV/nems/noscrub/emc.nemspara/RT/FV3-MOM6-CICE5/master-20190409"
    BASELINE_TEMPLATE="/scratch4/NCEPDEV/nems/noscrub/emc.nemspara/RT/FV3-MOM6-CICE5/master-20190409"
    INPUTS="@[BASELINE]"

    default_resources={
        TASKS=150
        TPN=24
        INPES=3
        JNPES=8
        THRD=1
        WRTTASK_PER_GROUP=6
    }
    default_stretched_resources={
        TASKS=48
        TPN=12
        INPES=2
        JNPES=4
        THRD=1
    }
    default_nested_resources={
	use default_stretched_resources
        TASKS=96
    }
    default_threaded_resources={
        TASKS=84
        TPN=12
        INPES=3
        JNPES=4
        THRD=2
        WRTTASK_PER_GROUP=12
    }

    # PLATFORM DETECTION -----------------------------------------------
    embed bash detect [[[
        # This function is used at PARSE TIME to detect whether we are
        # on NOAA Theia.  It must be very fast and low resource usage
        # since the parser runs it.
        if ( ! which sbatch > /dev/null 2>&1 ) ; then
            exit 1
        fi
        if [[ -d /scratch3 && -d /scratch4 && -d /contrib ]] ; then
            exit 0
        fi
        exit 1
    ]]]


    # ROCOTO SUPPORT ---------------------------------------------------
    rocoto={
        install_dir="@[HOMErt]"
        log_dir="@[TMPrt]/log"
        scheduler="slurm"
        entities=[[[
  <!ENTITY SHORTQ "debug">
  <!ENTITY LONGQ "debug">
  <!ENTITY BUILDQ "batch"> <!-- NOTE: If you change this, you must change the partition too -->
]]]
        build_resources=[[[
      <!-- Build job resources minus wallclock -->
      <queue>@[BUILD_QUEUE]</queue>
      <partition>@[PARTITION]</partition>
      <cores>12</cores> <!-- 2 cores ensures exclusive access on Theia -->
      <envar><name>PRODUTIL_RUN_NODESIZE</name><value>@[cores_per_node]</value></envar>
]]]
        short_test_resources=[[[
      <!-- Short test job -->
      <queue>@[SHORT_TEST_QUEUE]</queue>
      <partition>@[PARTITION]</partition>
      <memory></memory> <!-- Unlimited memory -->
      <envar><name>PRODUTIL_RUN_NODESIZE</name><value>@[cores_per_node]</value></envar>
]]]
        long_test_resources=[[[
      <!-- Long test job -->
      <queue>@[LONG_TEST_QUEUE]</queue>
      <partition>@[PARTITION]</partition>
      <memory></memory> <!-- Unlimited memory -->
      <envar><name>PRODUTIL_RUN_NODESIZE</name><value>@[cores_per_node]</value></envar>
]]]
    }


}

########################################################################

# Autodetection of available platforms.  Calls the "detect" function
# from each of the listed platforms.

autodetect plat (/ gaea.c3, gaea.c4, wcoss.cray, theia,       wcoss.phase2, wcoss.phase1,
                   xjet, wcoss_dell_p3 /)

