########################################################################
load 'platforms.input'
load 'nemscommon.input'

# Common prep step at the top of all fv3 tests:

embed bash fv3_prep(RUNDIR,modules,CNTL) [[[
        rm -rf "$RUNDIR"
        mkdir -p "$RUNDIR" "$CNTL"
        cd @[RUNDIR]

        set +e

        source @[plat%SRCnems]/conf/module-setup.sh.inc
        module purge
        module use $( dirname $modules )
        module load $( basename $modules )

        mkdir RESTART INPUT 
        #For MOM6
        mkdir MOM6_RESTART MOM6_OUTPUT
        #For CICE
        mkdir history restart


        export MPI_TYPE_DEPTH=20
        export OMP_STACKSIZE=512M
        export ESMF_RUNTIME_COMPLIANCECHECK=OFF:depth=4

        ##To run Cupid, comment out the above ESMF_RUNTIME_COMPLIANCECHECK and 
        ##uncomment the two rows below
        #export ESMF_RUNTIME_COMPLIANCECHECK=OFF # removed depth=4
        #export ESMF_RUNTIME_TRACE=ON # added this

	# Set the stack limit as high as we can.
        if [[ $( ulimit -s ) != unlimited ]] ; then
	    for try_limit in 20000 18000 12000 9000 6000 3000 1500 1000 800 ; do
	        if [[ ! ( $( ulimit -s ) -gt $(( try_limit * 1000 )) ) ]] ; then
		    ulimit -s $(( try_limit * 1000 ))
	    else
		    break
	        fi
	    done
        fi

	ulimit -a
]]]

build fv3_mom6_cice.exe { 
    # Use NEMSAppBuilder to build a coupled app.   
    use plat 
    target="@[plat%EXECrt]/fv3_mom6_cice.exe" 
    modules.nems="@[plat%INCrt]/modules_fv3_mom6_cice" 
    md5sum="@[target].md5" 
 
    # The NEMSAppBuilder is another embedded bash script in nemscommon.input 
    build=NEMSAppBuilder(NEMS.x="@[target]",modules.nems="@[modules.nems]", 
                         OPTS="app=coupledFV3_MOM6_CICE_CMEPS",md5sum="@[md5sum]") 
}

build fv3_mom6_cice_nems.exe {
    # Use NEMSAppBuilder to build a coupled app.   
    use plat
    target="@[plat%EXECrt]/fv3_mom6_cice.exe"
    modules.nems="@[plat%INCrt]/modules_fv3_mom6_cice"
    md5sum="@[target].md5"


    # The NEMSAppBuilder is another embedded bash script in nemscommon.input 
    build=NEMSAppBuilder(NEMS.x="@[target]",modules.nems="@[modules.nems]",
                         OPTS="app=coupledFV3_MOM6_CICE_NEMS",md5sum="@[md5sum]")
}
########################################################################

#NOTE: DO NOT UPDATE the fv3_default variables for coupled fiels, 
#update them within the tests themselves.  The fv3_default variables
#are updated to match the NEMSfv3gfs variables only. Instead, update
#the cpl_defaults

# Common variables used by many tests and input files: 

fv3_defaults = {
    WARM_START='.F.'
    NGGPS_IC='.T.'
    EXTERNAL_IC='.T.'
    MAKE_NH='.T.'
    MOUNTAIN='.F.'
    SATMEDMF='.F.'
    HYBEDMF='.T.'
    LHEATSTRG='.F.'
    LGFDLMPRAD='.F.'
    EFFR_IN='.F.'
    NA_INIT='1'
    READ_INCREMENT='.F.'
    FDIAG='0,1,2,3,4,5,6,7,8,9,10,11,12,15,18,21,24'
    NSTF_NAME='2,1,1,0,5'
    FNALBC="'global_snowfree_albedo.bosu.t126.384.190.rg.grb',"
    FNVETC="'global_vegtype.igbp.t126.384.190.rg.grb',"
    FNSOTC="'global_soiltype.statsgo.t126.384.190.rg.grb',"
    FNSMCC="'global_soilmgldas.t126.384.190.grb',"
    FNABSC="'global_mxsnoalb.uariz.t126.384.190.rg.grb',"

    ENS_NUM='1'
    SYEAR='2016'
    SMONTH='10'
    SDAY='03'
    SHOUR='00'
    DT_ATMOS='1800'

    DAYS='1'
    FHMAX='24'
    NPX='97'
    NPY='97'
    NPZ='64'
    NPZP='65'
    NFHOUT='3'
    NFHMAX_HF='12'
    NFHOUT_HF='1'

    QUILTING='.true.'
    WRITE_GROUP=1
    NUM_FILES=2
    FILENAME_BASE="'dyn' 'phy'"
    OUTPUT_GRID="'cubed_sphere_grid'"
    OUTPUT_FILE="'netcdf'"
    WRITE_NEMSIOFLIP='.false.'
    WRITE_FSYNCFLAG ='.false.'
    IMO='384'
    JMO='190'

    SPPT='-999.0'
    SHUM='-999.0'
    SKEB='-999.0'

    IAU_INC_FILES="''"

    CPLFLX='.F.'
    CPLWAV='.F.'
    CPL='.false.'
}

#NOTE: DO NOT UPDATE the fv3_default variables for coupled fiels, 
#update them within the tests themselves.  The fv3_default variables
#are updated to match the NEMSfv3gfs variables only. Instead, update
#the cpl_defaults 

cpl_defaults = { 
    CPLFLX='.T.'
    CPL='.true.'
    NSTF_NAME='0,0,0,0,0'
    MOM6_RESTART_SETTING='n'
    NPROC_ICE='48'
    DT_ATMOS='900' #needed for C96 cases
    MEDIATOR='cmeps'
}

########################################################################
# embeded bash script to create input files at prerun from specification 
# in compset

embed bash edit_inputs(CDATE,DT_CICE,NPROC_ICE,RUNTYPE,DUMPFREQ_N,DUMPFREQ,DT_THERM,DT_DYNAM) [[[

python <<EOT
import os
import datetime

fmt='%Y%m%d%H'
dt = datetime.datetime.strptime("@[CDATE]", fmt)
tt = dt.timetuple()

jday=tt.tm_yday
year=tt.tm_year
month=tt.tm_mon
day=tt.tm_mday
ymd=str(year)+str(month).zfill(2)+str(day).zfill(2)

#ice_in
istep0=(jday-1)*86400/int("@[DT_CICE]")

with open("ice_in_template",'rt') as inf:
 with open("ice_in",'wf') as outf:
   for x in inf.readlines():
    newline=x.replace('YEAR_INIT',str(year)) \
             .replace('ISTEP0',str(istep0)) \
             .replace('DT_CICE',"@[DT_CICE]") \
             .replace('NPROC_ICE',"@[NPROC_ICE]")\
             .replace('RUNTYPE',"@[RUNTYPE]") \
             .replace('DUMPFREQ_N',"@[DUMPFREQ_N]") \
             .replace('DUMPFREQ',"@[DUMPFREQ]")
    outf.write(newline)

#MOM_input
with open("INPUT/MOM_input_template",'rt') as inf:
 with open("INPUT/MOM_input",'wf') as outf:
   for x in inf.readlines():
    newline=x.replace('DT_THERM_MOM6',"@[DT_THERM]") \
             .replace('DT_DYNAM_MOM6',"@[DT_DYNAM]")
    outf.write(newline)

#diag_table
with open("diag_table_template",'rt') as inf:
 with open("diag_table",'wf') as outf:
   for x in inf.readlines():
    newline=x.replace('YMD',ymd) \
             .replace('SYEAR',str(year).zfill(4)) \
             .replace('SMONTH',str(month).zfill(2)) \
             .replace('SDAY',str(day).zfill(2))
    outf.write(newline)
EOT
]]]

######################################################################### 

load 'cpld_fv3_mom6_cice_cold_atm_flux.input'
load 'cpld_fv3_384_mom6_cice_cold_atm_flux.input'
load 'cpld_fv3_mom6_cice_2d_atm_flux.input'
load 'cpld_fv3_384_mom6_cice_2d_atm_flux.input'

